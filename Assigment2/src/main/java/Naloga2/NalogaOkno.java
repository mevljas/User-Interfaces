/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Naloga2;

import java.awt.Color;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author seba
 */
public class NalogaOkno extends javax.swing.JFrame {

    /**
     * Creates new form NalogaOkno
     */
    public NalogaOkno() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfc = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        iskano = new javax.swing.JTextField();
        zamenjava = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        besedilo = new javax.swing.JTextPane();
        status = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        odpri = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        shrani = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        najdi = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        zamenjaj = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        datoteka = new javax.swing.JMenu();
        dOdpri = new javax.swing.JMenuItem();
        dShrani = new javax.swing.JMenuItem();
        dIzhod = new javax.swing.JMenuItem();
        iskanje = new javax.swing.JMenu();
        iNajdi = new javax.swing.JMenuItem();
        iZamenjaj = new javax.swing.JMenuItem();
        barve = new javax.swing.JMenu();
        bBesedilo = new javax.swing.JMenuItem();
        bPodlaga = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        pomoc = new javax.swing.JMenu();
        pAvtor = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Iskanje:");

        jLabel2.setText("Zamenjava:");

        iskano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iskanoActionPerformed(evt);
            }
        });

        zamenjava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamenjavaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iskano, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(zamenjava))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iskano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(zamenjava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        besedilo.setPreferredSize(new java.awt.Dimension(500, 350));
        jScrollPane1.setViewportView(besedilo);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        status.setText("Status:");
        getContentPane().add(status, java.awt.BorderLayout.SOUTH);

        jToolBar1.setRollover(true);

        odpri.setText("Odpri");
        odpri.setFocusable(false);
        odpri.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        odpri.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        odpri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odpriActionPerformed(evt);
            }
        });
        jToolBar1.add(odpri);
        jToolBar1.add(jSeparator1);

        shrani.setText("Shrani");
        shrani.setFocusable(false);
        shrani.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        shrani.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        shrani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shraniActionPerformed(evt);
            }
        });
        jToolBar1.add(shrani);
        jToolBar1.add(jSeparator2);

        najdi.setText("Najdi vse");
        najdi.setFocusable(false);
        najdi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        najdi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        najdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                najdiActionPerformed(evt);
            }
        });
        jToolBar1.add(najdi);
        jToolBar1.add(jSeparator3);

        zamenjaj.setText("Zamenjaj vse");
        zamenjaj.setFocusable(false);
        zamenjaj.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        zamenjaj.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        zamenjaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamenjajActionPerformed(evt);
            }
        });
        jToolBar1.add(zamenjaj);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        datoteka.setMnemonic('D');
        datoteka.setText("Datoteka");

        dOdpri.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        dOdpri.setMnemonic('O');
        dOdpri.setText("Odpri");
        dOdpri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dOdpriActionPerformed(evt);
            }
        });
        datoteka.add(dOdpri);

        dShrani.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        dShrani.setMnemonic('S');
        dShrani.setText("Shrani");
        dShrani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dShraniActionPerformed(evt);
            }
        });
        datoteka.add(dShrani);

        dIzhod.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        dIzhod.setMnemonic('I');
        dIzhod.setText("Izhod");
        dIzhod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dIzhodActionPerformed(evt);
            }
        });
        datoteka.add(dIzhod);

        jMenuBar1.add(datoteka);

        iskanje.setMnemonic('I');
        iskanje.setText("Iskanje");

        iNajdi.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        iNajdi.setMnemonic('N');
        iNajdi.setText("Najdi vse");
        iNajdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iNajdiActionPerformed(evt);
            }
        });
        iskanje.add(iNajdi);

        iZamenjaj.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        iZamenjaj.setMnemonic('Z');
        iZamenjaj.setText("Zamenjaj vse");
        iZamenjaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iZamenjajActionPerformed(evt);
            }
        });
        iskanje.add(iZamenjaj);

        jMenuBar1.add(iskanje);

        barve.setMnemonic('B');
        barve.setText("Barve");

        bBesedilo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        bBesedilo.setMnemonic('B');
        bBesedilo.setText("Besedilo");
        bBesedilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBesediloActionPerformed(evt);
            }
        });
        barve.add(bBesedilo);

        bPodlaga.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        bPodlaga.setMnemonic('P');
        bPodlaga.setText("Podlaga");
        bPodlaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPodlagaActionPerformed(evt);
            }
        });
        barve.add(bPodlaga);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setMnemonic('p');
        jMenuItem1.setText("Pocisti");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        barve.add(jMenuItem1);

        jMenuBar1.add(barve);

        pomoc.setMnemonic('P');
        pomoc.setText("Pomoč");

        pAvtor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        pAvtor.setMnemonic('A');
        pAvtor.setText("Avtor");
        pAvtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pAvtorActionPerformed(evt);
            }
        });
        pomoc.add(pAvtor);

        jMenuBar1.add(pomoc);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iskanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iskanoActionPerformed

    }//GEN-LAST:event_iskanoActionPerformed

    private void zamenjavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamenjavaActionPerformed

    }//GEN-LAST:event_zamenjavaActionPerformed

    private void dOdpriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dOdpriActionPerformed
        odpriCB(evt);
    }//GEN-LAST:event_dOdpriActionPerformed

    private void odpriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odpriActionPerformed
        odpriCB(evt);
    }//GEN-LAST:event_odpriActionPerformed

    private void shraniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shraniActionPerformed
        shraniCB(evt);
    }//GEN-LAST:event_shraniActionPerformed

    private void dShraniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dShraniActionPerformed
        shraniCB(evt);
    }//GEN-LAST:event_dShraniActionPerformed

    private void dIzhodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dIzhodActionPerformed
        izhodCB(evt);
    }//GEN-LAST:event_dIzhodActionPerformed

    private void bPodlagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPodlagaActionPerformed
        
        Color c = JColorChooser.showDialog(this, "Izberi barvo podlage", null);
        int end = besedilo.getSelectionEnd();
        if (c != null) {
            StyledDocument d = besedilo.getStyledDocument();
            Style s = besedilo.addStyle("BarvaPodlage", null);
            StyleConstants.setBackground(s, c);
            d.setCharacterAttributes(besedilo.getSelectionStart(),
                    end - besedilo.getSelectionStart(), s,
                    false);
            status.setText("Barva podlage spremenjena");
        } else {
            status.setText("Sprememba barve podlage preklicana");
        }
        
        besedilo.setSelectionStart(end);
        besedilo.setSelectionEnd(end);

    }//GEN-LAST:event_bPodlagaActionPerformed

    private void iNajdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iNajdiActionPerformed
        najdiCB(evt);
    }//GEN-LAST:event_iNajdiActionPerformed

    private void najdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_najdiActionPerformed
        najdiCB(evt);
    }//GEN-LAST:event_najdiActionPerformed

    private void zamenjajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamenjajActionPerformed
        zamenjajCB(evt);
    }//GEN-LAST:event_zamenjajActionPerformed

    private void iZamenjajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iZamenjajActionPerformed
        zamenjajCB(evt);
    }//GEN-LAST:event_iZamenjajActionPerformed

    private void bBesediloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBesediloActionPerformed
        
        Color c = JColorChooser.showDialog(this, "Izberi barvo besedila", Color.yellow);
        int end = besedilo.getSelectionEnd();
        if (c != null) {
            StyledDocument d = besedilo.getStyledDocument();
            Style s = besedilo.addStyle("BarvaBesedila", null);
            StyleConstants.setForeground(s, c);
            d.setCharacterAttributes(besedilo.getSelectionStart(),
                    end - besedilo.getSelectionStart(), s,
                    false);
            status.setText("Barva besedila spremenjena");
        } else {
            status.setText("Sprememba barve besedila preklicana");
        }
        
        besedilo.setSelectionStart(end);
        besedilo.setSelectionEnd(end);
        

    }//GEN-LAST:event_bBesediloActionPerformed

    private void pAvtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pAvtorActionPerformed
        status.setText("Avtor: Sebastjan Mevlja");
    }//GEN-LAST:event_pAvtorActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        pocisti();
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void odpriCB(java.awt.event.ActionEvent evt) {
        
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            try {
                pocisti();
                besedilo.read(new FileReader(f), null);
                status.setText("Ime datoteke: " + f.getName() + ", velikost: " + f.length() + " B");
            } catch (Exception e) {
                status.setText("Napaka pri branju datoteke: " + f.getName());
            }
        } else {
            status.setText("Odpiranje datoteke preklicano");
        }
        
    }
    
    private void shraniCB(java.awt.event.ActionEvent evt) {
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            try {
                besedilo.write(new FileWriter(f));
                status.setText("Shranjena datoteka: " + f.getName() + ", velikost: " + f.length() + " B");
            } catch (Exception e) {
                status.setText("Napaka pri pisanju datoteke: " + f.getName());
            }
        } else {
            status.setText("Shranjevanje datoteke preklicano");
        }
    }
    
    private void izhodCB(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }
    
    private void najdiCB(java.awt.event.ActionEvent evt) {
        
        String iskanje = iskano.getText();
        
        if (!iskanje.isEmpty()) {
            int index = besedilo.getText().indexOf(iskanje);
            if (index != -1) {
                pobarvaj(iskanje);
                besedilo.grabFocus();
                besedilo.moveCaretPosition(index);
                besedilo.select(index, index);
                iskano.setText("");
                zamenjava.setText("");
                
            } else {
                
            }
        } else {
            status.setText("Vpišite iskani niz");
        }
        
    }
    
    private void zamenjajCB(java.awt.event.ActionEvent evt) {
        String iskanje = iskano.getText();
        String zamenjaj = zamenjava.getText();
        int st = 0;
        int i = 0;
        int prevI = 0;
        
        if (!iskanje.isEmpty()) {
            if (!zamenjaj.isEmpty()) {
                if (besedilo.getText().contains(iskanje)) {
                    pobarvaj(iskanje);
                    while ((i = besedilo.getText().indexOf(iskanje, prevI)) >= 0) {
                        besedilo.select(i, i + iskanje.length());
                        besedilo.replaceSelection(zamenjaj);
                        prevI = i + 1;
                        st++;
                        
                    }
                    
                    status.setText("Število zamenjanih pojavitev: " + st);
                    iskano.setText("");
                    zamenjava.setText("");
                } else {
                    status.setText("Iskani niz ne obstaja");
                }
            } else {
                status.setText("Vpišite zamenjavo niza");
            }
        } else {
            status.setText("Vpišite iskani niz");
        }
        
    }
    
    private void pobarvaj(String iskanje) {
        Color c = Color.yellow;
        StyledDocument d = besedilo.getStyledDocument();
        String tempBesedilo = besedilo.getText();
        Style s = besedilo.addStyle("BarvaOspredja", null);
        StyleConstants.setBackground(s, c);
        
        int st = 0;
        int i = 0;
        int prevI = 0;
        while ((i = tempBesedilo.indexOf(iskanje, prevI)) >= 0) {
            d.setCharacterAttributes(i,
                    iskanje.length(), s,
                    false);
            prevI = i + 1;
            st++;
        }
        status.setText("Število najdenih pojavitev: " + st);
    }
    
    private void pocisti() {
        Color white = Color.WHITE;
        Color black = Color.BLACK;
        StyledDocument d = besedilo.getStyledDocument();
        String tempBesedilo = besedilo.getText();
        Style background = besedilo.addStyle("BarvaOspredja", null);
        StyleConstants.setBackground(background, white);
        Style foreground = besedilo.addStyle("BarvaOspredja", null);
        StyleConstants.setForeground(foreground, black);
        
        d.setCharacterAttributes(0, tempBesedilo.length(), background, true);
        d.setCharacterAttributes(0, tempBesedilo.length(), foreground, false);
        
        int end = besedilo.getSelectionEnd();

//        besedilo.setSelectionStart(end);
//        besedilo.setSelectionEnd(end);
        besedilo.setCaretPosition(0);
//        
        status.setText("Čiščenje uspešno");
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NalogaOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NalogaOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NalogaOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NalogaOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NalogaOkno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem bBesedilo;
    private javax.swing.JMenuItem bPodlaga;
    private javax.swing.JMenu barve;
    private javax.swing.JTextPane besedilo;
    private javax.swing.JMenuItem dIzhod;
    private javax.swing.JMenuItem dOdpri;
    private javax.swing.JMenuItem dShrani;
    private javax.swing.JMenu datoteka;
    private javax.swing.JMenuItem iNajdi;
    private javax.swing.JMenuItem iZamenjaj;
    private javax.swing.JMenu iskanje;
    private javax.swing.JTextField iskano;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JFileChooser jfc;
    private javax.swing.JButton najdi;
    private javax.swing.JButton odpri;
    private javax.swing.JMenuItem pAvtor;
    private javax.swing.JMenu pomoc;
    private javax.swing.JButton shrani;
    private javax.swing.JLabel status;
    private javax.swing.JButton zamenjaj;
    private javax.swing.JTextField zamenjava;
    // End of variables declaration//GEN-END:variables
}
